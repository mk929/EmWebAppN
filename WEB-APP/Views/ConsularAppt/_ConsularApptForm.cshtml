@using EmWebApp.Data
@model EmWebApp.Data.ConsularApptVM
@using EmWebApp.BLL
@{
	SelectList genderList = new SelectList(new[] {  new {Name = "Male", Value="M"},
													new {Name = "Female", Value="F"}}, "Value", "Name");

	SelectList workingDays = DateTime.Now.WorkingDaysSelectList(60, Request.IsAuthenticated);
	SelectList appointmentTypes = DropDownLookups.GetAppointmentTypes();

	SelectList stayTypeList = new SelectList(EmWebAppConfig.StayTypeDict.Select(p => new { Name = p.Value, Value = p.Key.ToString() }).ToArray(), "Value", "Name");

	ViewBag.SelectAppointmentDate = HttpUtility.HtmlDecode("&raquo;") + " Select Appointment Date " + HttpUtility.HtmlDecode("&laquo;");
	ViewBag.SelectServiceType = HttpUtility.HtmlDecode("&raquo;") + " Select Service Type " + HttpUtility.HtmlDecode("&laquo;");
	ViewBag.SelectGender = HttpUtility.HtmlDecode("&raquo;") + " Select Gender " + HttpUtility.HtmlDecode("&laquo;");
	ViewBag.StayType = HttpUtility.HtmlDecode("&raquo;") + " Select Stay Type " + HttpUtility.HtmlDecode("&laquo;");

}

<style>
    input,
    select,
    textarea {
        max-width: 500px;
    }
</style>

<div class="embassypaper">

    <div class="row text-center">
        <h3>@ViewBag.Title</h3>
        <h4 style="font-family: Myanmar3">(ကောင်စစ်ဆိုင်ရာ လျောက်လွှာပုံစံ)</h4>
    </div>
    @using (Html.BeginForm())
            {
        @Html.AntiForgeryToken()
        <div class="form-horizontal" role="form" lang="mm">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.AppointmentDate, workingDays, (string)ViewBag.SelectAppointmentDate
, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" }) Available up to two weeks in advance. (ရက်ချိန်းကို ၂ ပတ် ကြိုတင်ရယူနိုင်ပါသည်။)
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group ">
                    @Html.LabelFor(model => model.AppointmentType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.AppointmentType, appointmentTypes, (string)ViewBag.SelectServiceType
                 , new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-5">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Gender, genderList, (string)ViewBag.SelectGender
             , new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control datefield" } })
                            <!--  Html.TextBoxFor(model => model.DateOfBirth, new { class = "form-control" } ) -->
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            &nbsp&nbsp yyyy-mm-dd
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PlaceOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Nationality, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               @Value = "Myanmar",
                               @disabled = "disabled"
                           }
                       })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PassportNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PassportNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PassportNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PassportIssuedDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PassportIssuedDate, new { htmlAttributes = new { @class = "form-control  datefield" } })
                            @Html.ValidationMessageFor(model => model.PassportIssuedDate, "", new { @class = "text-danger" })
                            &nbsp&nbsp yyyy-mm-dd
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NRIC_No, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.NRIC_No, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NRIC_No, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StayPermitNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.StayPermitNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StayPermitNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StayType, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.DropDownListFor(model => model.StayType, stayTypeList, (string)ViewBag.StayType
                                    , new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StayType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployerName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.EmployerName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactAddr1, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ContactAddr1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactAddr1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HomeAddr1, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.HomeAddr1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HomeAddr1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.HiddenFor(m => m.Note)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-4">
                        <br />
                        <input type="submit" value="Submit Appointment Request" class="btn btn-primary btn-block" />
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
            <br />
    }
</div>
